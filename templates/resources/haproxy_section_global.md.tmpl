---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "roxywi_haproxy_section_global Resource - roxywi"
subcategory: ""
description: |-
  Manage HAProxy Global sections. Since this section exists by default and cannot be deleted, it can only be imported and edited. Please note that changes may cause HAProxy to restart.
---

# roxywi_haproxy_section_global (Resource)

Manage HAProxy Global sections. Since this section exists by default and cannot be deleted, it can only be imported and edited. Please note that changes may cause HAProxy to restart.


## Example Usage

{{ tffile "./examples/resources/haproxy_section_global/example_1.tf" }}

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `server_id` (Number) The ID of the server to deploy to.

### Optional

- `action` (String) What action should be taken after changing the config. Available: save, reload, restart.
- `chroot` (String) HAProxy is designed to isolate itself into a chroot jail during startup, where
it cannot perform any file-system access at all.
- `daemon` (Boolean) Start as a daemon. The process detaches from the current terminal after forking, and errors are not reported anymore in the terminal.
- `group` (String) A group with what HAProxy will be started.
- `log` (List of String) A list loging settings.
- `maxconn` (Number) Limits the per-process connection limit.
- `option` (String) Here you can put addinional options separeted by '
'.
- `pidfile` (String) Path to the pid file.
- `socket` (List of String) A list socket settings.
- `timeouts` (Block, Optional) (see [below for nested schema](#nestedblock--timeouts))
- `user` (String) A user with what HAProxy will be started.

### Read-Only

- `id` (String) The ID of this resource.

<a id="nestedblock--timeouts"></a>
### Nested Schema for `timeouts`

Optional:

- `delete` (String)
- `update` (String)

## Import

In Terraform v1.7.0 and later, use an import block to import Group. For example:

{{tffile "./examples/resources/haproxy_section_global/example_2.tf"}}

Using terraform import, import Group can be imported using the `id`, e.g. For example:

{{codefile "shell" "./examples/resources/haproxy_section_global/import.sh"}}